import { ZodIssueCode } from "zod";
import handleError from "./handleError.js";
export default function handleInvalidCommand(error) {
    const badActionError = error.issues.filter((issue) => issue.code === ZodIssueCode.invalid_enum_value &&
        issue.path[0] === "action")[0];
    if (badActionError) {
        return handleError({
            error: { message: badActionError.message }
        });
    }
    const requiredArguments = error.issues
        .filter((issue) => issue.message === "Required")
        .map((issue) => issue.path.at(-1));
    if (requiredArguments.length) {
        return handleError({
            error: {
                message: `Missing required arguments: [${requiredArguments.join(", ")}]`
            }
        });
    }
    const customError = error.issues.filter((issue) => issue.code === ZodIssueCode.custom)[0];
    if (customError) {
        return handleError({
            error: { message: customError.message }
        });
    }
    return handleError({
        error: { message: error.message }
    });
}
